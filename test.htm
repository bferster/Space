<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
	<link REL="SHORTCUT ICON" HREF="img/shanti.ico">
	<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=yes, user-scalable=yes">
    <title>ArcGIS test</title>
	<link rel="stylesheet" href="https://js.arcgis.com/4.12/esri/themes/light/main.css">
	<script src="https://js.arcgis.com/4.12/"></script>
 	<style>
    	html, body, #viewDiv {	padding:0; margin:0; height:100%; width: 100%;  }
		#infoDiv { position: absolute; top: 250px;  left: 15px; }
		#infoDiv input { border: none; box-shadow: rgba(0, 0, 0, 0.3) 0px 1px 2px; }
	</style>
  </head>
  <body>
	<div id="viewDiv"></div>
	<div id="infoDiv">
		<input class="esri-component esri-widget--button esri-widget esri-interactive" type="button" style="display:none" id="switch-btn" value="3D"                 title="Change view" />
		<img   class="esri-component esri-widget--button esri-widget esri-interactive" type="button" style="display:none" id="base-btn"   src="img/basemapicon.gif"  title="Change base map"/>
		<img   class="esri-component esri-widget--button esri-widget esri-interactive" type="button" style="display:none" id="layer-btn"  src="img/layericon.png"    title="Show list of layers" />
		<img   class="esri-component esri-widget--button esri-widget esri-interactive" type="button" style="display:none" id="legend-btn" src="img/legendicon.gif"   title="Show legend" />
		<img   class="esri-component esri-widget--button esri-widget esri-interactive" type="button" style="display:none" id="sketch-btn" src="img/sketchicon.gif"   title="Show legend" />
		<img   class="esri-component esri-widget--button esri-widget esri-interactive" type="button" style="display:none" id="book-btn"   src="img/bookmarkicon.gif" title="Show bookmarks" />
	</div>
	<div id="traceDiv" style="position:absolute;background-color:#fff;padding:4px;top:16px;left:16px"></div>

<script>


/* DEPENDENCIES

	Imaages:	img/shanti.ico
				img/basemapicon.gif
				img/layericon.png
				img/legendicon.gif
				img/sketchicon.gif
				img/bookmarkicon.gif

	ESRI:		https://js.arcgis.com/4.12
				https://js.arcgis.com/4.12/esri/themes/light/main.css

	Global var: app

	Query opts:	id=		(integer) Id number of ArcGIS Online WebMap
				kml=	(string)  Full url of KML/KMZ/GeoJSON file
				base=	(string)  See: https://developers.arcgis.com/javascript/latest/api-reference/esri-Map.html#basemap
				lon=	(decimal) Longitude 
				lat=	(decimal) Latitude 
				zoom=	(integer) Factor from 1-18
				tilt=	(integer) Degrees fro 0-360
				opt= 	(integer) Bitmapped: 1=Scale | 2=Search| 4=3D | 8=Base | 16=Layers | 32=Legend | 64=Sketch | 128=Bookmarks
				show= 	(integer) Bitmapped: 16=Layers | 32=Legend | 64=Sketch | 128=Bookmarks

	Sample webmap:	localhost/test.htm?id=26fe0e56797449b0be29031512f9adaa

*/

	var app={ url:url=window.location.search.substring(1), container:"viewDiv",											// Holds startup parameters													
			  map:null, baseMap:"topo-vector", kml:null, 								
			  mapView: null,  sceneView: null, activeView:null, opt:0xffff, show:0,
			  bookmarks:null, legend:null, layers:null, basePick:null, sketch:null,				
   			  center: [91.1721, 29.6524], zoom:12, tilt:80,
			  reqs:["esri/Map","esri/WebMap", "esri/views/MapView", "esri/views/SceneView", "esri/layers/KMLLayer", "esri/core/watchUtils"]
			 };

	if (app.url && app.url.match(/kml=/i)) 		app.kml=app.url.match(/kml=([^&]*)/i)[1]								// If kml/kmz spec'd 
	if (app.url && app.url.match(/base=/i)) 	app.baseMap=app.url.match(/base=([^&]*)/i)[1];							// Base
	if (app.url && app.url.match(/lon=/i)) 		app.center[0]=app.url.match(/lon=([^&]*)/i)[1]-0;						// Lon
	if (app.url && app.url.match(/lat=/i)) 		app.center[1]=app.url.match(/lat=([^&]*)/i)[1]-0;						// Lat
	if (app.url && app.url.match(/zoom=/i)) 	app.zoom=app.url.match(/zoom=([^&]*)/i)[1]-0;							// Zoom 
	if (app.url && app.url.match(/tilt=/i)) 	app.tilt=app.url.match(/tilt=([^&]*)/i)[1]-0;							// Tilt 
	if (app.url && app.url.match(/opt=/i)) 		app.opt=app.url.match(/opt=([^&]*)/i)[1]-0;								// Options to load
	if (app.url && app.url.match(/show=/i)) 	app.show=app.url.match(/show=([^&]*)/i)[1]-0;							// Options to open on startup

	if (app.opt&1)	 app.reqs[6]="esri/widgets/ScaleBar";																// Scalebar if spec'd
	if (app.opt&2)	 app.reqs[7]="esri/widgets/Search";																	// Search
	if (app.opt&8)	 app.reqs[8]="esri/widgets/BasemapGallery";															// Basepicker 
	if (app.opt&16)	 app.reqs[9]="esri/widgets/LayerList";																// Layerlist 
	if (app.opt&32)  app.reqs[10]="esri/widgets/Legend";																// Legend
	if (app.opt&64)	 app.reqs[11]="esri/widgets/Sketch",app.reqs[12]="esri/layers/GraphicsLayer";						// Sketch
	if (app.opt&128) app.reqs[13]="esri/widgets/Bookmarks";																// Bookmarks 

	require(app.reqs, function() {																					// LOAD ArcGIS MODULES
		var i,key;
		var Map,WebMap,MapView,SceneView,KMLLayer;
		var ScaleBar,Search,BasemapGallery,LayerList,Legend,Sketch,GraphicsLayer,Bookmarks;
		for (i=0;i<app.reqs.length;++i)	{																				// For each required module
			key=app.reqs[i].match(/([^\/]+)$/i)[1];																		// Extract variable name
			if (key == "Map") 					Map=arguments[i];														// Set variable
			else if (key == "WebMap")			WebMap=arguments[i];
			else if (key == "MapView")			MapView=arguments[i];
			else if (key == "SceneView")		SceneView=arguments[i];
			else if (key == "KMLLayer")			KMLLayer=arguments[i];
			else if (key == "watchUtils")		watchUtils=arguments[i];
			else if (key == "ScaleBar")			ScaleBar=arguments[i];
			else if (key == "Search")			Search=arguments[i];
			else if (key == "BasemapGallery")	BasemapGallery=arguments[i];
			else if (key == "LayerList")		LayerList=arguments[i];
			else if (key == "Legend")			Legend=arguments[i];
			else if (key == "Sketch")			Sketch=arguments[i];
			else if (key == "GraphicsLayer")	GraphicsLayer=arguments[i];
			else if (key == "Bookmarks")		Bookmarks=arguments[i];
			}
		
		app.HandleMessage=function(msg) 																			// HANDLE INCOMING  CROSS-DOMAIN MESSAGE
			{
			var v;
			var m=msg.data;																								// Point at payload
			if (!m)	return;																								// Quit if no data
			if (m.match(/goto/i)) {																						// A goto
				v=m.split("|")
				if (v[0]) app.center[0]=v[1]-0;																			// Lat
				if (v[1]) app.center[1]=v[2]-0;																			// Lon
				if (v[2]) app.zoom=v[3]-0;																				// Zoom
				if (v[3]) app.tilt=v[4]-0;																				// Tilt
				app.mapView.goTo({ center:app.center, zoom: app.zoom});													// Go there in 2D
				app.sceneView.goTo({ center:app.center, zoom: app.zoom, tilt:app.tilt });								// 3D
				}
		}

		app.ShowOptions=function() {																					// SHOW ACTIVE OPTIONS
			document.getElementById("switch-btn").style.display=(app.opt&4) ? "block" : "none";							// Hide/show icons
			document.getElementById("base-btn").style.display=(app.opt&8) ? "block" : "none";							
			document.getElementById("layer-btn").style.display=(app.opt&16 && (app.map.portalItem || app.kml)) ? "block" : "none";							
			document.getElementById("sketch-btn").style.display=(app.opt&32) ? "block" : "none";						
			document.getElementById("legend-btn").style.display=(app.opt&64 && app.map.portalItem)  ? "block" : "none";						
			document.getElementById("book-btn").style.display=(app.opt&128 && app.map.bookmarks) ? "block" : "none";							
			if (app.opt&16  && app.show&16) 	setOption(app.layers);													// Layers
			if (app.opt&32  && app.show&32) 	setOption(app.legend);													// Legend
			if (app.opt&64  && app.show&64) 	setOption(app.sketch);													// Sketch
			if (app.opt&128 && app.show&128) 	setOption(app.bookmarks);												// Bookmarks
			
			function setOption(option) {																				// SET OPTION ON
				app.activeView.ui.add(option,"top-right");																// Show
				option.visible=true;																					// Show it's on
				}
			}

		if (app.url && app.url.match(/id=/i)) {																			// If WebMap id spec'd	
			app.map=new WebMap({ portalItem: { id: app.url.match(/id=([^&]*)/i)[1] }});									// Load it
			app.map.load().then(function() { 
				app.ShowOptions() 																						// Hide/show options on load
				})
			}
		else{																											// Plain map
			app.map=new Map({ basemap:app.baseMap});																	// Make new map
			app.ShowOptions();																							// Hide/show options
			}
		
		app.sceneView=new SceneView( { 	container:null,	map: app.map });												// 3D view (hidden)
		app.activeView=app.mapView=new MapView({																		// 2D view
			container: app.container, map: app.map, 																	// Primary view
			ground: "world-elevation"
			});

		if (app.kml) {																									// Add KML/KMZ if spec'd	
			app.kml=new KMLLayer({ url:app.kml });																		// Make new layer
			app.map.add(app.kml);																						// Add it to map
/*			app.mapView.whenLayerView(app.kml).then(function(layerView) {
				watchUtils.whenFalseOnce(layerView, "updating", function() {
					var polygons=layerView.allVisiblePolygons;
					var lines=layerView.allVisiblePolylines;
					var points=layerView.allVisiblePoints;
					var images=layerView.allVisibleMapImages;
					var kmlFullExtent=polygons.concat(lines).concat(points).concat(images)
					.map(graphic => (graphic.extent ? graphic.extent : graphic.geometry.extent))
					.reduce((previous, current) => previous.union(current));
					app.mapView.goTo({ extent: kmlFullExtent });
					});
				});
*/			}

		if (window.addEventListener) 	window.addEventListener("message",app.HandleMessage,false);						// Listen for cross-domain messages
		else							window.attachEvent("message",app.HandleMessage);								// For other browsers				

// ADD WIDGETS 

		if (app.opt&1)  app.mapView.ui.add(new ScaleBar({ view:app.mapView }), "bottom-left");							// Add scale widget
		if (app.opt&2)  app.mapView.ui.add(new Search({ view:app.mapView }), "top-right");								// Add Search widget
		if (app.opt&4)	document.getElementById("switch-btn").addEventListener("click", function() { app.SwitchView();  });// 3D
		if (app.opt&8) {																								// Add basemap picker
			app.basePick=new BasemapGallery({ view:app.mapView, source: { portal: { url:"https://www.arcgis.com", useVectorBasemaps: true } }, visible:false }); 
			document.getElementById("base-btn").addEventListener("click", function() { app.ToggleOption(app.basePick); });	 // Add button handler
			}
		if (app.opt&16) {																								// Layer list
			app.layers=new LayerList({ view:app.mapView, visible:false });												// Add widger							
				document.getElementById("layer-btn").addEventListener("click", function() { app.ToggleOption(app.layers);  });	// Add button handler
			}
			if (app.opt&32) {																							// Legend
			app.legend=new Legend({ view:app.mapView, visible:false });													// Add widget					
			document.getElementById("legend-btn").addEventListener("click", function() { app.ToggleOption(app.legend); });	// Add button handler
			}
		if (app.opt&64) {																								// Sketch 
			var gl=new GraphicsLayer();  app.map.add(gl);																// Add new graphics layer to map
			app.sketch=new Sketch({ view:app.mapView, visible:false, layer:gl });										// Add widget
			document.getElementById("sketch-btn").addEventListener("click", function() { app.ToggleOption(app.sketch); });	// Add button handler
			}
		if (app.opt&128) {  																							// Bookmarks
			app.bookmarks=new Bookmarks({ view:app.mapView, visible:false });											// Add widget
			document.getElementById("book-btn").addEventListener("click", function() { app.ToggleOption(app.bookmarks); });	 // Add button handler
			}
			
// POSITION

		app.mapView.when(function() { 																					// When 2D map loads
			if (!app.map.portalItem) app.mapView.goTo({ center:app.center, zoom:app.zoom });							// Center	
			app.SendMessage("done");																					// Done rendering
			});
		app.sceneView.when(function() { app.sceneView.goTo({ tilt:80 }); });											// When 3D loads, tilt

// EVENTS
		app.mapView.on("click", function(e) {
			var lat=Math.round(e.mapPoint.latitude*1000)/1000;
			var lon=Math.round(e.mapPoint.longitude*1000)/1000;
			app.SendMessage("click|"+lat+"|"+lon);
			});

		app.sceneView.on("click", function(e) {
			var lat=Math.round(e.mapPoint.latitude*1000)/1000;
			var lon=Math.round(e.mapPoint.longitude*1000)/1000;
			app.SendMessage("click|"+lat+"|"+lon);
			});
	
// HELPER FUNCTIONS //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

		app.ToggleOption=function(option)																			// HIDE/SHOW WIDGET OPTION
		{
			if (option.visible)	app.activeView.ui.remove(option);														// If visible, hide
			else				app.activeView.ui.add(option,"top-right");												// Else show
			option.visible=!option.visible;																				// Toggle flag (why?)
		}

		app.SwitchView=function() 																					// SWITCH 2D/3D MODE
		{

//app.ZoomToLayer(app.kml); return;
			var is3D=app.activeView.type === "3d";																		// Current mode												
			var activeViewpoint=app.activeView.viewpoint.clone();														// Clone viewport
			app.activeView.container=null;																				// Hide current one
			
			if (is3D) {																									// If 3D now
				app.activeView=app.mapView;																				// Use 2D view
				document.getElementById("switch-btn").value="3D";														// Set button
				} 
			else{																										// If 2D now
				app.activeView=app.sceneView;																			// Use 2D view
				document.getElementById("switch-btn").value="2D";														// Set button
				}
			app.activeView.viewpoint=activeViewpoint;																	// Set viewport
			app.activeView.container=app.container;																		// Set container
		}		

		app.SendMessage=function(msg) 																				// SEND CROSS-DOMAIN MESSAGE
		{
			if (!msg)	return;																							// Nothing
			msg="map="+msg;																								// Add header
			if (window.parent)	window.parent.postMessage(msg,"*");														// If has a parent
			else				window.postMessage(str,"*");															// Send message locally
		}

		app.SendMessage("ready");																						// Ready to accept messages

	});	// REQUIRE() CLOSURE

	function trace(msg, p1, p2, p3, p4)									
	{
		if (p4 != undefined)
			console.log(msg,p1,p2,p3,p4);
		else if (p3 != undefined)
			console.log(msg,p1,p2,p3);
		else if (p2 != undefined)
			console.log(msg,p1,p2);
		else if (p1 != undefined)
			console.log(msg,p1);
		else
			console.log(msg);
	//		document.getElementById("traceDiv").innerHTML+=msg+"<br>";

}

</script>
</body>
</html>

