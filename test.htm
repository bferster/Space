<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
	<link REL="SHORTCUT ICON" HREF="img/shanti.ico">
	<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=yes, user-scalable=yes">
    <title>ArcGIS test</title>
	<link rel="stylesheet" href="https://js.arcgis.com/4.12/esri/themes/light/main.css">
	<script src="https://js.arcgis.com/4.12/"></script>
 	<style>
    	html, body, #viewDiv {	padding:0; margin:0; height:100%; width: 100%;  }
		#infoDiv { position: absolute; top: 250px;  left: 15px; }
		#infoDiv input { border: none; box-shadow: rgba(0, 0, 0, 0.3) 0px 1px 2px; }
	</style>
  </head>
  <body>
	<div id="viewDiv"></div>
	<div id="infoDiv">
		<input class="esri-component esri-widget--button esri-widget esri-interactive" type="button" id="switch-btn" value="3D"                 title="Change view" />
		<img   class="esri-component esri-widget--button esri-widget esri-interactive" type="button" id="base-btn"   src="img/basemapicon.gif"  title="Change base map"/>
		<img   class="esri-component esri-widget--button esri-widget esri-interactive" type="button" id="layer-btn"  src="img/layericon.png"    title="Show list of layers" />
		<img   class="esri-component esri-widget--button esri-widget esri-interactive" type="button" id="legend-btn" src="img/legendicon.gif"   title="Show legend" />
		<img   class="esri-component esri-widget--button esri-widget esri-interactive" type="button" id="sketch-btn" src="img/sketchicon.gif"   title="Show legend" />
		<img   class="esri-component esri-widget--button esri-widget esri-interactive" type="button" id="book-btn"   src="img/bookmarkicon.gif" title="Show bookmarks" />
	</div>
	<div id="traceDiv" style="position:absolute;background-color:#fff;padding:4px;top:16px;left:16px"></div>

<script>

//			  localhost/test.htm?26fe0e56797449b0be29031512f9adaa

	var app={ container: "viewDiv", map:null, baseMap:"topo-vector", opt:0xffff,									// Holds startup parameters
			  bookmarks:null, legend:null, layer:null, basePick:null, sketch:null,				
			  mapView: null,  sceneView: null, activeView: null, 
   			  center: [91.1721, 29.6524], zoom:6, kml:null,
			  reqs:["esri/Map","esri/WebMap", "esri/views/MapView", "esri/views/SceneView", "esri/layers/KMLLayer"]
			 };
	
	var url=window.location.search.substring(1);																		// Get query string
	if (url && url.match(/kml=/i)) 		app.kml=url.match(/kml=([^&]*)/i)[1]											// If kml/kmz spec'd 
	if (url && url.match(/base=/i)) 	app.baseMap=url.match(/base=([^&]*)/i)[1];										// If base map spec'd 
	if (url && url.match(/lon=/i)) 		app.center[0]=url.match(/lon=([^&]*)/i)[1]-0;									// If lon spec'd 
	if (url && url.match(/lat=/i)) 		app.center[1]=url.match(/lat=([^&]*)/i)[1]-0;									// If lat spec'd 
	if (url && url.match(/zoom=/i)) 	app.zoom=url.match(/zoom=([^&]*)/i)[1]-0;										// If zoom spec'd 
	if (url && url.match(/tilt=/i)) 	app.tilt=url.match(/tilt=([^&]*)/i)[1]-0;										// If tilt spec'd 
	if (url && url.match(/opt=/i)) 		app.opt=url.match(/opt=([^&]*)/i)[1]-0;											// Options are bitmapped: 1=Scale, 2=Search, 4=3D, 8=Base, 16=Layers, 32=Legend. 64=Sketch, 128=Bookmarks

	if (app.opt&1)	 app.reqs[5]="esri/widgets/ScaleBar";																// Scalebar if spec'd
	if (app.opt&2)	 app.reqs[6]="esri/widgets/Search";																	// Search
	if (app.opt&8)	 app.reqs[7]="esri/widgets/BasemapGallery";															// Basepicker 
	if (app.opt&16)	 app.reqs[8]="esri/widgets/LayerList";																// Layerlist 
	if (app.opt&32)  app.reqs[9]="esri/widgets/Legend";																	// Legend
	if (app.opt&64)	 app.reqs[10]="esri/widgets/Sketch",app.reqs[11]="esri/layers/GraphicsLayer";						// Sketch
	if (app.opt&128) app.reqs[12]="esri/widgets/Bookmarks";																// Bookmarks 

	require(app.reqs, function() {																					// LOAD ARCGIS MODULES
		var i,key;
		var Map,WebMap,MapView,SceneView,KMLLayer;
		var ScaleBar,Search,BasemapGallery,LayerList,Legend,Sketch,GraphicsLayer,Bookmarks;
		for (i=0;i<app.reqs.length;++i)	{																				// For each required module
			key=app.reqs[i].match(/([^\/]+)$/i)[1];																		// Extract variable name
			if (key == "Map") 					Map=arguments[i];														// Set variable
			else if (key == "WebMap")			WebMap=arguments[i];
			else if (key == "MapView")			MapView=arguments[i];
			else if (key == "SceneView")		SceneView=arguments[i];
			else if (key == "KMLLayer")			KMLLayer=arguments[i];
			else if (key == "ScaleBar")			ScaleBar=arguments[i];
			else if (key == "Search")			Search=arguments[i];
			else if (key == "BasemapGallery")	BasemapGallery=arguments[i];
			else if (key == "LayerList")		LayerList=arguments[i];
			else if (key == "Legend")			Legend=arguments[i];
			else if (key == "Sketch")			Sketch=arguments[i];
			else if (key == "GraphicsLayer")	GraphicsLayer=arguments[i];
			else if (key == "Bookmarks")		Bookmarks=arguments[i];
			}

			document.getElementById("switch-btn").style.display=(app.opt&4) ? "block" : "none";							// Hide/show icons
			document.getElementById("base-btn").style.display=(app.opt&8) ? "block" : "none";							
			document.getElementById("layer-btn").style.display=(app.opt&16) ? "block" : "none";							
			document.getElementById("sketch-btn").style.display=(app.opt&32) ? "block" : "none";						
			document.getElementById("legend-btn").style.display=(app.opt&64) ? "block" : "none";						
			document.getElementById("book-btn").style.display=(app.opt&128) ? "block" : "none";							
			
			if (url && url.match(/id=/i)) {																				// If WebMap id spec'd
				url=url.match(/id=([^&]*)/i)[1];																		// Extract number
				app.map=new WebMap({ portalItem: { id: url }});															// Get webmap
				app.map.load().then(function() {																		// When loaded
					app.center[0]=app.map.portalItem.extent.center.longitude;											// Set lon
					app.center[1]=app.map.portalItem.extent.center.latitude;											// Set lat
					});
				}
			else
				app.map=new Map({ basemap:app.baseMap});																// Make new map

			app.sceneView=new SceneView( { 	container:null,	map: app.map });											// 3D view (hidden)
			app.activeView=app.mapView=new MapView({																	// 2D view
				container: app.container, map: app.map, 																// Primary view
				ground: "world-elevation"
 				});
			
			if (app.kml) {																								// Add KML/KMZ if spec'd	
				app.kml=new KMLLayer({ url:app.kml });																	// Make new layer
				app.map.add(app.kml);																					// Add it to map
//				app.kml.when(function() { ZoomToLayer(app.kml) });														// Go there														// When loaded
				}

			if (window.addEventListener) 	window.addEventListener("message",app.HandleMessage,false);					// Listen for cross-domain messages
			else							window.attachEvent("message",app.HandleMessage);							// For other browsers				

// ADD WIDGETS 

			if (app.opt&1)  app.mapView.ui.add(new ScaleBar({ view:app.mapView }), "bottom-left");						// Add scale widget
			if (app.opt&2)  app.mapView.ui.add(new Search({ view:app.mapView }), "top-right");							// Add Search widget
			if (app.opt&4)	document.getElementById("switch-btn").addEventListener("click", function() { app.SwitchView();  });// 3D
			if (app.opt&8) {																							// Add basemap picker
				app.basePick=new BasemapGallery({ view:app.mapView, source: { portal: { url:"https://www.arcgis.com", useVectorBasemaps: true } }, visible:false }); 
				document.getElementById("base-btn").addEventListener("click", function() { app.ToggleOption(app.basePick); });	 // Add button handler
				}
			if (app.opt&16) {																							// Layer list
				app.layer=new LayerList({ view:app.mapView, visible:false });											// Add widger							
				 document.getElementById("layer-btn").addEventListener("click", function() { app.ToggleOption(app.layer);  });	// Add button handler
				}
			 if (app.opt&32) {																							// Legend
				app.legend=new Legend({ view:app.mapView, visible:false });												// Add widget					
				document.getElementById("legend-btn").addEventListener("click", function() { app.ToggleOption(app.legend); });	// Add button handler
				}
			if (app.opt&64) {																							// Sketch 
				var gl=new GraphicsLayer();  app.map.add(gl);															// Add new graphics layer to map
				app.sketch=new Sketch({ view:app.mapView, visible:false, layer:gl });									// Add widget
				document.getElementById("sketch-btn").addEventListener("click", function() { app.ToggleOption(app.sketch); });		// Add button handler
				}
			if (app.opt&128) {  																						// Bookmarks
				app.bookmarks=new Bookmarks({ view:app.mapView, visible:false });										// Add widget
				document.getElementById("book-btn").addEventListener("click", function() { app.ToggleOption(app.bookmarks); });	 // Add button handler
				}
				
// POSITION

			app.mapView.when(function() { if (app.kml != 112) app.mapView.goTo({ center:app.center, zoom: app.zoom });	});
			app.sceneView.when(function() { app.sceneView.goTo({ center:app.center, zoom: app.zoom, tilt:80 });	});

// EVENTS
			app.mapView.on("click", function(e) {
				var lat=Math.round(e.mapPoint.latitude*1000)/1000;
				var lon=Math.round(e.mapPoint.longitude*1000)/1000;
				app.SendMessage("click|"+lat+"|"+lon);
				});

			app.sceneView.on("click", function(e) {
				var lat=Math.round(e.mapPoint.latitude*1000)/1000;
				var lon=Math.round(e.mapPoint.longitude*1000)/1000;
				app.SendMessage("click|"+lat+"|"+lon);
				});
	


// HELPER FUNCTIONS //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

			app.ZoomToLayer=function(layer) {
   				app.mapView.extent=layer.fullExtent;
			}

			app.ToggleOption=function(option)																		// HIDE/SHOW WIDGET OPTION
			{
				if (option.visible)	app.activeView.ui.remove(option);													// If visible, hide
				else				app.activeView.ui.add(option,"top-right");											// Else show
				option.visible=!option.visible;																			// Toggle flag (why?)
			}
	
			app.SwitchView=function() 																				// SWITCH 2D/3D MODE
			{

//app.ZoomToLayer(app.kml); return;
				var is3D=app.activeView.type === "3d";																	// Current mode												
				var activeViewpoint=app.activeView.viewpoint.clone();													// Clone viewport
				app.activeView.container=null;																			// Hide current one
				
				if (is3D) {																								// If 3D now
					app.activeView=app.mapView;																			// Use 2D view
					document.getElementById("switch-btn").value="3D";													// Set button
					} 
				else{																									// If 2D now
					app.activeView=app.sceneView;																		// Use 2D view
					document.getElementById("switch-btn").value="2D";													// Set button
					}
				app.activeView.viewpoint=activeViewpoint;																// Set viewport
				app.activeView.container=app.container;																	// Set container
			}		
	
			app.SendMessage=function(msg) 																			// SEND CROSS-DOMAIN MESSAGE
			{
				if (!msg)	return;																						// Nothing
				msg="map="+msg;																							// Add header
				if (window.parent)	window.parent.postMessage(msg,"*");													// If has a parent
				else				window.postMessage(str,"*");														// Send message locally
			}

			app.HandleMessage=function(msg) 																		// HANDLE INCOMING  CROSS-DOMAIN MESSAGE
			{
				var m=msg.data;																							// Point at payload
				trace(msg)
	//			app.sceneView.goTo({ center:app.center, zoom: app.zoom, tilt:80 });
			}

	});

	function trace(msg, p1, p2, p3, p4)									
	{
		if (p4 != undefined)
			console.log(msg,p1,p2,p3,p4);
		else if (p3 != undefined)
			console.log(msg,p1,p2,p3);
		else if (p2 != undefined)
			console.log(msg,p1,p2);
		else if (p1 != undefined)
			console.log(msg,p1);
		else
			console.log(msg);
//		document.getElementById("traceDiv").innerHTML+=msg+"<br>";

	}

</script>
</body>
</html>

