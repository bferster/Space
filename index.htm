<!DOCTYPE html>
<html>
<head>
	<meta charset="UTF-8" />
	<link REL="SHORTCUT ICON" HREF="img/UVALogo.ico">
	<title>VisualEyes</title>
 	<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>	
	<link rel="stylesheet" href="//ajax.googleapis.com/ajax/libs/jqueryui/1.11.4/themes/smoothness/jquery-ui.css" />
	<script src="//ajax.googleapis.com/ajax/libs/jqueryui/1.11.4/jquery-ui.min.js"></script>
	<script src="jquery.ui.touch-punch.min.js"></script>
  	<link rel="stylesheet" href="http://openlayers.org/en/v3.5.0/css/ol.css" type="text/css">
   	<script src="http://openlayers.org/en/v3.5.0/build/ol-debug.js" type="text/javascript"></script>
  	<script type="text/javascript" src='//www.google.com/jsapi?autoload={"modules":[{"name":"visualization","version":"1"}]}'></script>
	<script src="//www.qmediaplayer.com/qfile.js"></script>
	<script src="space.js" type="text/javascript"></script>
  	<script src="time.js" type="text/javascript"></script>
  	<script src="popup.js" type="text/javascript"></script>
  	<script src="data.js" type="text/javascript"></script>
 
 	<style type="text/css">
		body { 				font-family:Verdana,Geneva,sans-serif; font-size:9px; 
							padding:0px;margin:0px;
							}
		.popup-main	{ 		position:absolute;padding:12px;border-radius:6px;display:none; 
							border:1px solid #999;background-color:#fff;font-size:11px;
							overflow-x:hidden;max-height:100px;max-width:300px;
							}
		.popup-webpage	{ 	position:absolute;padding:12px;border-radius:6px;display:none; 
							border:1px solid #999;background-color:#fff;font-size:11px;
							}
		.popup-pic { 		margin-right:8px;vertical-align:top;cursor:zoom-in;
							border:1px solid #999;max-width:80px;max-height:60px;overflow:hidden;
							}				
		.popup-desc { 		vertical-align:top;color:#555;cursor:zoom-in;
							}				
		.popup-title {		margin-bottom:8px;color:#555;
							}
		.popup-date { 		color:#999;font-size:9px;
							}
		.popup-cite { 		text-align:right;font-size:8px;color:#999;display:none;
							}
		.time-timebar { 	position:absolute;color:#999;
							}
		.time-seg { 		position:absolute;height:14px;text-align:center;padding-top:2px;
		  					white-space:nowrap;overflow:hidden;cursor:pointer; 
							}
		.time-startend {	font-size:11px;font-weight:bold;color:#666;
							}
		.time-timeslider {	background:#ccc;height:6px;border:none;display:inline-block;
							}
		.time-timeslider.ui-slider .ui-slider-handle {
							height:30px;width:8px;margin-top:-8px;
							background:#009900;border:none;cursor:pointer;
							}
		.time-slidertime { 	position:absolute;width:100px;text-align:center;
							}
		.time-ticks { 		position:absolute;width:2px;height:8px;background-color:#ccc;
							}
		.time-ticklabel { 	position:absolute;width:100px;text-align:center;color:#999
							}
		.time-timeplayer { 	position:absolute;color:#999;margin-left:18px;margin-right:18px;width:123px;
							}

		.time-playerslider{ background:#ccc;height:4px;width:80px;border:none;display:inline-block;
							margin-left:6px;
							}
		.time-playerspeed { position:absolute;width:40px;text-align:center;font-size:9px;color:#999;
							}
		.time-playerslider.ui-slider .ui-slider-handle {
							height:0px;width:0px;margin-top:7px;cursor:pointer;
							border-left: 5px solid transparent;border-right: 5px solid transparent;
							border-bottom: 8px solid #999;
							}
		.time-timeview { 	position:absolute;color:#666;overflow:hidden;width:100%;
							}
		.ve-unselectable { 	-moz-user-select: none;     -khtml-user-select: none;
		   			 		-webkit-user-select: none;  	-ms-user-select: none;   user-select: none;
							}
		.ve-base { 			position:absolute;height:100%;width:100%;
							}	
		.ve-left { 			}	
		.ve-right { 		background-color:#eee;overflow-y:auto;
							}	
		.ve-bottom { 		background-color:#f8f8f8;width:100%;
							}	
		.ve-splash { 		text-align:center;vertical-align:center;pointer-events:none;
							}
		.ve-is {			border-radius:10px;padding-left:8px;padding-right:8px;padding-top:1px;
							border:1px solid #999;font-size:12px;height;20px;width:200px;
							}
		.ve-bs {			border-radius:10px;padding-left:8px;padding-right:8px;padding-top:1px;
							border:1px solid #999;font-size:12px;height;20px;color:#666;cursor:pointer;
							}

 	</style>

</head>
<body>
<div id="showDiv" style="opacity:0" class="ve-base">
	<div id="bottomDiv" style="position:absolute;top:0px;opacity:inherit" class="ve-bottom ve-unselectable">
		<img id="settingsBut" src="img/settingsbut.gif" style="position:absolute;cursor:pointer">
	</div>
	<div id="leftDiv" style="position:absolute;opacity:inherit" class="ve-left"></div>
	<div id="rightDiv" style="position:absolute;opacity:inherit" class="ve-right"></div>
	<div id="lrSiz" style="position:absolute;width:8px;cursor:col-resize;opacity:inherit" class="ve-unselectable" title="Resize panes">
		<div id="lrSiz1" style="position:absolute;width:40px;height:100%;left:-8px" class="ve-unselectable"></div>
	</div>
	<div id="bSiz" style="position:absolute;height:8px;width:100%;cursor:row-resize;opacity:inherit" class="ve-unselectable" title="Resize timeline">
		<div id="bSiz1" style="position:absolute;height:20px;width:100%" class="ve-unselectable"></div>
	</div>
</div>
<div id="splashDiv" class="ve-splash"><img src="img/velogo.png"></div>
<script>

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// DISPLAY
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	var curJson={},mps={},tln={},pop={},dtl={};
	var paneAnimationTimer=null;												// Times pane animations
	var imageAnimationTimer=[];													// Times image animations
	var isMobile=false;															// Flag for mobile devices
	var host="//qmediaplayer.com/";												// Set host for database saves
	var userName="",password="",curShow=0;										// Login info
	var lastClickTime=0;														// Store last click time
	var drupalMan=false;														// Flag for drupal manager	
	var curSpanStart,curSpanEnd,curTime;										// Current timings
	var qmf=null;																// File system
	var curShow="";																// Current show
	var _this=this;																// Save context for callbacks
	
	function ResizePanes()													// RESIZE PANES
	{ 
		var wid=$("#showDiv").width();											// Width
		var hgt=$("#showDiv").height();											// Height
		var cx=wid*curJson.leftRightSplit;										// Center
		var cy=hgt*curJson.upDownSplit;											// Center
		$("#leftDiv").width(cx);												// Set left width
		$("#rightDiv").width(wid-cx);											// Set right width
		$("#rightDiv").css("left",cx+"px");										// Set right pos
		$("#leftDiv").height(cy);												// Set left height
		$("#rightDiv").height(hgt);												// Set right height
		$("#lrSiz").css("left",cx+"px");										// Set lr size pos
		$("#lrSiz").height(hgt);												// Set lr size height
		$("#bSiz").css("top",cy+"px");											// Set b size pos
		$("#bSiz").width(cx);													// Set b size width
		$("#bottomDiv").width(cx);												// Set bottom width
		$("#bottomDiv").height(hgt-cy);											// Set bottom height
		$("#bottomDiv").css("top",cy+"px");										// Set lr size pos
		$("#settingsBut").css({ top:$("#bottomDiv").height()-18,left:cx-18});	// Settings button
		mps.UpdateMapSize();													// Update map size to div size
		tln.UpdateTimeline();													// Update timeline to div size
		Draw();																	// Redraw
	}		

	function LoadShow(data)													// LOAD A SHOW
	{
   		if (data.qmfmsg == "private") {											// If a private file		
			AlertBox("Private project","Sorry, but this project is marked <i>private</i>. You will need to supply the password to load it");
			return;																// Quit
			}
		else if (data.qmfmsg == "error") {										// If an error
			AlertBox("Sorry, but there was an error loading this project");		// Show
			return;																// Quit
			}
   		if (qmf.curFile)														// If a good file
   			curShow=qmf.curFile;												// Set curshow
   		if (data.sheet) {														// If a spreadsheet spec'd
		 	dtl.GetSpreadsheet(data.sheet,true,null,function(mobs) {			// Get spreadsheet data
				data.mobs=mobs;													// Set mobs
				InitProject(data);												// Re-init project
				},true);
			}
		else
			InitProject(data);													// Init project
     	}

	function InitProject(data)												// INIT PROJECT
	{
		var i,s,e,v,t,id;
		if (data)							curJson=data;						// If data, set it
		if (!curJson.mobs)					curJson.mobs=[];					// Alloc if empty
		if (curJson.panTime == undefined)	curJson.panTime=.5;					// Default to 500ms
		mps.ClearLayers();														// Clar all layera
		if (!data) {			
			curJson.sheet="";
			curJson.upDownSplit=.75;
			curJson.leftRightSplit=.66;													
			}
		for (i=0;i<curJson.mobs.length;++i) {									// For each mob	
			o=curJson.mobs[i];													// Point at mob
			if (o.start)	o.start=pop.DateToTime(o.start);					// Convert date to time
			if (o.end)		o.end=pop.DateToTime(o.end);						// Convert date to time
			s=e=0;																// Assume not timed
			if (o.show) {														// If show mode spec'd
				if (o.show.match(/s/i)) 	s=o.start;							// Start timed
				if (o.show.match(/e/i)) 	e=o.end;							// End timed
				if (o.show.match(/off/i)) 	s=e=-1;								// Hide it
				}
			if (o.marker || o.mapMarker) {										// If a marker spec'd 
				var marker=o.mapMarker ? o.mapMarker : o.marker;				// Use mapMarker first, then marker
				o.type="icon";													// Assume icon
				if (marker.match(/drive\.google/i)) {							// An drive file
					o.type="kml";												// Set type
					id=marker.match(/id=(.+)&/);								// Extract id
					if (id)	{													// An id found
						var s="//drive.google.com/uc?export=view&id="+id[1];	// Construct 'direct' link
						o.lid=mps.AddKMLLayer(s,o.opacity,o.id,s,e);			// Add KML layer								 
						}
					}
				else if (marker.match(/\.kml/i)) {								// A KML file
					o.type="kml";												// Set type
					o.lid=mps.AddKMLLayer(marker,o.opacity,o.id,s,e);			// Add KML layer								 
					}
				else if (marker.match(/path/i)) {								// A path
					var dots=[];
					o.type="path";												// Set type
					v=o.desc.split(",");										// Split by comma
					for (j=0;j<v.length;++j) {									// For each one spec'd
 						id=curJson.mobs[FindMobByID(v[j])];						// Point at mob
 						if ((id == undefined) || (id < 0))						// Mob not found
 							continue;											// Skip it
 						t=id.start;												// Get time
  						t=pop.DateToTime(t);									// +/- min past 1970
						if (!j)		s=e=t;										// Init to 1st mob
						vv=id.where.split(",");									// Split into parts
						vv=ol.proj.transform([vv[0]-0,""+vv[1]-0],'EPSG:4326',mps.curProjection);	// Transform 
						vv.push(t); 											// Add time
						dots.push(vv);											// Add dot
						s=Math.min(s,t);										// Earliest
						e=Math.max(e,t);										// Latest
						}
					var ew=o.size ? o.size  : 2;								// Set size with 2 pixel default
					var eo=o.opacity ? o.opacity  : 1;							// Set opacity with 1.0 default
					mps.AddPathLayer(dots,o.color,ew,eo,s,o.end ? o.end: e, o.show);// Add path to overlays
					}
				else if (marker.match(/\.png|.gif|\.jpg|\.jpeg/i) && (o.where.split(",").length > 3)) { // An image file with a full georef
					o.type="image";												// Set type
					o.lid=mps.AddImageLayer(marker,o.where, o.opacity,s,e);		// Add image layer								 
					}
				else if (marker.match(/segment/i)) 								// A segment
					o.type="segment";											// Set type
				else if (marker.match(/init/i)) 								// An init
					o.type="init";												// Set type
				else if (marker.match(/:/)) 									// A feature click
					o.type="feature";											// Set type
				else if (o.where) { 											// Must be an icon
					var sty={};													// Not style
					o.type="icon";												// Set type
					o.mapMarker ?	sty.m=o.mapMarker : sty.m=o.marker;			// Use map marker first, then time marker
					o.mapTitle  ?	sty.t=o.mapTitle  : sty.t=o.title;			
					o.mapDesc   ?	sty.d=o.mapDesc   : sty.d=o.desc;				
					o.mapColor  ?	sty.f=o.mapColor  : sty.f=o.color;			
					o.mapEdge   ?	sty.s=o.mapEdge   : sty.s=o.edge;				
					o.mapSize   ?	sty.w=o.mapSize   : sty.w=o.size;				
					o.mapTextCol  ? sty.tc=o.mapTextCol  : sty.tc=curJson.mapTextCol;				
					o.mapTextFont ? sty.tf=o.mapTextFont : sty.tf=curJson.mapTextFont;				
					o.mapOpacity  ? sty.a=o.mapOpacity   : sty.a=o.opacity;				
					mps.AddMarkerLayer(o.where,sty,i,s,e);						// Add marker to overlays
					}
			}
		}

		mps.SetBaseMap(curJson.baseMap);										// Set basemap layer
		tln.InitTimeline("bottomDiv",curJson);									// Initialize timeline
		mps.MarkerLayerToTop();													// Make marker layer the top-most layer
		if (curJson.mapStartPos)		mps.Goto(curJson.mapStartPos);			// Position map

var str="<img src='http://www.viseyes.org/efolio/declaration.JPG' width='100%'> &nbsp; ";
str+=MakeSelect("testing",false,["0","1","2","3","4"]);
$("#rightDiv").html(str);
$("#testing").on("change", function() {
	var i=$(this).val();
	if (i == 1)	mps.StyleKMLFeatures(1,[{n:5,f:"#ff0000",a:.2,s:"#00ff00",w:50}]);
	if (i == 2)	mps.StyleKMLFeatures(1,[{n:5,f:"#0000ff"},{n:4,f:"#ffff00"}]);
	if (i == 3)	mps.StyleKMLFeatures(1,[{n:"*",f:"#ff00ff"}]);
	if (i == 3)	mps.StyleKMLFeatures(1,[{n:"*",f:"#ff00ff"}]);
	if (i == 4) pop.GetTextBox("Marker","Type shape","", function(str) {
							mps.StyleMarker([0],{m:str,w:35,t:"OK",f:"#0000ff"});
							}); 
$(this).val(0)
	});



	}
		

	function Draw(time)														// DRAW PROJECT
	{
		mps.UpdateMap(time,curJson.timeFormat,curJson.panTime);					// Update map layers
	}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// EVENTS
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	$(document).ready(function() {												// When loaded
		var i;
		if (window.addEventListener) 											// If supported this way
			window.addEventListener("message",shivaEventHandler,false);			// Add event handler
		else																	// Use other method
			window.attachEvent("message",shivaEventHandler);					// Add handler
		
		isMobile=navigator.userAgent.match(/(ipad|iphone|ipod|android)/i) ? true : false; // Set mobile flag
		var url=window.location.search.substring(1);							// Get query string
		qmf=new QmediaFile("//qmediaplayer.com/",4);							// Alloc file system

		drupalMan=(""+url).match(/pr=d/);										// If called from Drupal manager
		if (!url)																// Nothing on command line
			url=456;															// Use default
		if (drupalMan)	url="";													// If drupal, kill url
		if (url && !isNaN(url)) {												// If a number
			curShow=url;														// Save show number											
			url="//qmediaplayer.com/loadshow.php?id="+url;						// Get from db
			}	
		else if ((url) && (!url.match(/\./)))									// No file extension
			url+=".json";														// Add txt
		$.ajax({ url: url, dataType:'jsonp' });									// Get jsonp and call LoadShow() from it

		$("#lrSiz").draggable({													// DRAG L-R WIDTH HANDLER
			cursorAt:{left:16},	iframeFix:true,									// Cursor offset
			cursor: "col-resize", axis:"x",										// X-only
			start: function(event, ui) {										// On drag start
				$("#lrSiz1").css({ width:"500px", left:"-500px" });				// Widen hiding div
				},
			drag: function(event, ui) {											// On drag
				var wid=$("#showDiv").width();									// Max width
			 	curJson.leftRightSplit=Math.max(0,Math.min(1,(event.clientX-8)/wid));// Set ratio between windows
				if (Math.abs(curJson.leftRightSplit-.66) < .015) 				// If close to center
					curJson.leftRightSplit=.66;									// Snap it there
				ResizePanes();													// Resize panes
				},
			stop: function(event, ui) {											// On drag end
				$("#lrSiz1").css({ width:"40px", left:"-8px" });				// Contract hiding div
				ResizePanes();													// Resize panes
				}
			});
			
		$("#bSiz").draggable({													// DRAG TRANSCRIPT HEIGHT HANDLER		
			cursor: "row-resize", axis:"y",										// Y-only
			stop: function(event, ui) {											// When done
				ResizePanes;													// Resize panes when done
				},
			drag: function(event, ui) {											// On drag
				var hgt=$("#showDiv").height();									// Max height
			 	curJson.upDownSplit=Math.max(0,Math.min(1,(event.clientY-8)/hgt));	// Set ratio between windows
				if (Math.abs(curJson.upDownSplit-.75) < .015) 						// If close to center
					curJson.upDownSplit=.75;											// Snap it there
				ResizePanes();													// Resize panes
				}
			});
		$("#lrSiz").hover(														// L-R width
			function(){ $(this).css("background-color","#acc3db")},				// Highlight
			function(){ $(this).css("background-color","transparent")			// Hide
			});
		
		$("#bSiz").hover(														// Bottom height
			function(){ $(this).css("background-color","#acc3db")},				// Highlight
			function(){ $(this).css("background-color","transparent")			// Hide
			});
	
		$("#splashDiv").delay(1000).animate({ opacity:0},500);					// Hide logo
		$("#showDiv").animate({ opacity:1},5000, function() {					// Show interface
				ResizePanes();													// Resize panes
				});				
		$(window).resize(ResizePanes);											// Dynamic resizing
		pop=new Popup("leftDiv");												// Alloc popup module
		mps=new Space("leftDiv",pop);											// Alloc map module
		tln=new Timeline(pop);													// Alloc time module
		dtl=new DataLoad();														// Alloc data module
		mps.InitMap();															// Init map
		InitProject();															// Init project
		ResizePanes();															// Resize panes
		if (drupalMan) 															// If called from Drupal manager
			window.parent.postMessage("ShivaReady=true","*");					// Send message to parent wind		

	});

	function SendShivaMessage(src, msg) 									// SEND SHIVA MESSAGE 
	{
		var str=src;															// Add src and window						
		if (msg)																// If more to it
			str+="|"+msg;														// Add it
		if (window.parent)														// If has a parent
			window.parent.postMessage(str,"*");									// Send message to parent wind
		else																	// Local	
			window.postMessage(str,"*");										// Send message to wind
	}

	function shivaEventHandler(e)											// ON SHIVA EVENT
	{
//		trace(e.data);
		if (e.data && e.data.match(/Space=/)) {									// If a space event
			var v=e.data.split("|");											// Split into parts
			if (e.data.match(/=time/i))											// Set time
				tln.Goto(v[1]);													// Move timeline
			if (e.data.match(/=where/i))										// Set position
				mps.Goto(v[1])													// Move map
			if (e.data.match(/=zoom/i))	{										// Set position
				$("#rightDiv").html("");										// Clear div
				pop.DrawZoomer("rightDiv",v[1],2,4);							// Show zoomer
				}
			else if (e.data.match(/=show/i))	{								// Set position
				var i;
				var vv=v[1].split(",");											// Get array of ids
				for (i=0;i<vv.length;++i)										// For each one spec'd
				if (vv[i] && (vv[i].match(/\/\//))) 							// A url
					$("#rightDiv").html("<iframe id='popupIF' frameborder='0' height='"+($(window).height()-2)+"' width='100%' style='opacity:0,border:1px solid #666' src='"+vv[i]+"'></iframe>");	// Add iframe
				}
			}
		else if (e.data && e.data.match(/Time=/)) {								// If a time event
			var v=e.data.split("|");											// Split into parts
			if (e.data.match(/=where/i))										// Set position
				mps.Goto(v[1])													// Move map
			else if (e.data.match(/=time/i))									// New time
				Draw(v[1])														// Redraw
			if (e.data.match(/=zoom/i)) {										// Set position
				$("#rightDiv").html("");										// Clear div
				pop.DrawZoomer("rightDiv",v[1],2,4);							// Show zoomer
				}
			else if (e.data.match(/=show/i))	{								// Set position
				var i;
				var vv=v[1].split(",");											// Get array of ids
				for (i=0;i<vv.length;++i)										// For each one spec'd
					if (vv[i] && (vv[i].match(/\/\//)))							// A url
						$("#rightDiv").html("<iframe id='popupIF' frameborder='0' height='"+($(window).height()-2)+"' width='100%' style='opacity:0,border:1px solid #666' src='"+vv[i]+"'></iframe>");	// Add iframe
					else
						vv[i]=FindMobByID(vv[i]);								// Convert to mob index
				mps.DrawMapLayers(vv,v[2])										// Show markers(s)
				}
		}	
	}

	$("#settingsBut").click(function(e) {										// SETTINGS BUTTON CLICK
		pop.Sound("click",curJson.muteSound);									// Click sound							
		var str="<table><tr height='18'>";
		str+="<tr><td>Mute clicks?</td><td><input id='setmute' type='checkbox'></td></tr>";
		str+="<tr><td>Title</td><td><input id='settitle' class='ve-is' style='width:220px' type='input'></td></tr>";
		str+="<tr><td>Spreadsheet</td><td><input id='setsheet' class='ve-is' style='width:220px' type='input'></td></tr>";
		str+="<tr><td>L-R split&nbsp;% </td><td>";
		str+="<input id='setlr' class='ve-is' style='width:30px' type='input'>&nbsp;&nbsp;&nbsp;U-D&nbsp;split&nbsp;%  ";
		str+="<input id='setud' class='ve-is' style='width:30px' type='input'></td></tr>";
		str+="<tr><td>Start/end </td><td>";
		str+="<input id='setstart' class='ve-is' style='width:70px' value='"+curJson.start+"' type='input'>&nbsp;to&nbsp;";
		str+="<input id='setend' class='ve-is' style='width:70px' value='"+curJson.end+"' type='input'></td></tr>";
		str+="<tr><td>Date format </td><td>";
		str+=MakeSelect("settime",false,["Year","Mo/Year","Mon Year","Mo/Day/Year","Mon Day, Year"],curJson.timeFormat)+"</td></tr>";
		str+="<tr><td>Map&nbsp;label&nbsp;color</td><td><input id='setstcol' class='ve-is' style='width:50px' type='input'></td></tr>";
		str+="<tr><td>Map&nbsp;Label&nbsp;font</td><td><input id='setstfont' class='ve-is' style='width:160px' type='input'></td></tr>";
		str+="<tr><td>Map start</td><td><input id='setstartpos' class='ve-is' style='width:220px' type='input'></td></tr>";
		str+="<tr><td>Map&nbsp;base </td><td>"+MakeSelect("setbase",false,["Satellite","Terrain","Earth","Watercolor","B&W","Roadmap"],curJson.baseMap);
		str+="<tr><td>Map&nbsp;pan&nbsp;time</td><td><input id='setpan' class='ve-is' style='width:80px' type='input'>&nbsp;<i>(in seconds)</i></td></tr>";
		str+="<tr><td>Map&nbsp;location</td><td><input id='setwhere' class='ve-is' style='width:220px' type='input'></td></tr>";
		str+="<tr><td>Map&nbsp;point</td><td><input id='setpoint' class='ve-is' style='width:220px' type='input'></td></tr>";
		str+="<tr><td colspan=2><br></td> <tr>";
		str+="<tr><td>Options</td><td>"+MakeSelect("setfile",false,["Save/Load","Load","Save","Save as...","Delete","Undelete","xxx"],"Save/Load");
		str+="&nbsp;&nbsp;&nbsp<i>"+(_this.curShow ? "#"+_this.curShow : '')+"</i>&nbsp;&nbsp;&nbsp;"
		str+="Help <a href='https://docs.google.com/document/d/161td5ZuqKqT5R5r9z1P8AxBA6l9LaP-eYl_RvCyvw2g/edit?usp=sharing' target='_blank'>";
		str+="<img src='img/helpicon.gif' style='vertical-align:bottom' title='Show help'></a></td>";
		str+="</tr></table>";
		pop.Dialog("VisualEyes settings",str, function() {
				getDataFromInputs();											// Get data from inputs										
				if (curJson.sheet) {											// If a sheet spec'd
   	  			 	dtl.GetSpreadsheet(curJson.sheet,true,null,function(data) {	// Get spreadsheet data
						curJson.mobs=data;										// Set mobs
						InitProject(curJson);									// Re-init project
						},true);
	 				}
	 			else															// No sheet spec'd
					InitProject(curJson);										// Re-init project
			});
						
 		$("#setpan").val(curJson.panTime);										// Set pan time
 		$("#setbase").val(curJson.baseMap);										// Set base
		$("#settime").val(curJson.timeFormat);									// Set timeformat
		$("#setstart").val(curJson.start);										// Set start
		$("#setend").val(curJson.end);											// Set end
		$("#setstcol").val(curJson.mapTextCol);									// Set map label color
		$("#setstfont").val(curJson.mapTextFont);								// Set map label font
		$("#setsheet").val(curJson.sheet);										// Set spreadsheet
		$("#settitle").val(curJson.title);										// Set title
		$("#setstartpos").val(curJson.mapStartPos);								// Set map starting position
		$("#setlr").val(Math.floor(curJson.leftRightSplit*100));				// Set lr split
		$("#setud").val(Math.floor(curJson.upDownSplit*100));					// Set ud split
		pop.ColorPicker("setstcol",-1,true);									// Init color
	
		function getDataFromInputs() {											// GET DATA FROM DIALOG ELEMENTS
			curJson.panTime=$("#setpan").val();									// Set map pan time
			curJson.mapTextCol=$("#setstcol").val();							// Set map label color
			curJson.mapTextFont=$("#setstfont").val();							// Set map label font
			curJson.start=$("#setstart").val();									// Set start
			curJson.leftRightSplit=$("#setlr").val()/100;						// Set lr split
			curJson.upDownSplit=$("#setud").val()/100;							// Set ud split
			curJson.end=$("#setend").val();										// Set end
			curJson.mapStartPos=$("#setstartpos").val();						// Set end
			curJson.title=$("#settitle").val();									// Set sheet
			curJson.sheet=$("#setsheet").val();									// Set sheet
			tln.timeFormat=curJson.timeFormat=$("#settime").val();				// Get timeformat
			curJson.baseMap=$("#setbase").val();								// Get base
			mps.SetBaseMap(curJson.baseMap);									// Set basemap layer
			curJson.muteSound=$("#setmute").prop("checked");					// Set mute
  		}
		
		$("#setbase").on("change", function(e) {								// BASE HANDLER
			mps.SetBaseMap($("#setbase").val());								// Set basemap layer
			}); 

		$("#setstcol").on("click", function(e) {								// LAB COLOR HANDLER
			pop.ColorPicker("setstcol",-1);										// Set label text color
			}); 

		$("#setfile").on("change", function(e) {								// BASE HANDLER
			switch($(this).val()) {												// Route on choice
				case "Load" : 													// Load
					$("#dialogDiv").remove();									// Close dialog
					qmf.Load();													// Get data
					break;						
				case "Save" : 													// Save
					getDataFromInputs();										// Get data from inputs										
					qmf.Save(0);												// Save data
					break;						
				case "Save as..." : qmf.Save(1);	break;						// Save as..
				case "Delete" : 	qmf.Delete(0);	break;						// Delete
				case "Undelete" : 	qmf.Delete(1);	break;						// Undelete
				
				case "xxx" : 	SaveUserData("Some data", "data set", "KML");
								break;						
				}
			$(this).val("Save/Load");											// Reset select
			}); 
		});																		// End settings


		
	function SaveUserData(title, data, type)								// SAVE DATA TO USERDATA
	{		
		pop.LogIn( function(userName, password) {								// Log in
			var dat={};
			var url="savedata.php";												// Base file
			dat["email"]=userName;												// Add email
			dat["password"]=password;											// Add password
			dat["title"]=title;													// Add title
			dat["type"]=type;													// Add type
			dat["data"]=data;													// Add data
			$.ajax({ url:url,dataType:'text',type:"POST",crossDomain:true,data:dat,  // Post data
					success: function(d) { 										// On success		
					 	if (d.match(/new:/i)) 									// Success				
							_this.pop.Sound("ding");							// Ding
					 	else 													// Failure			
							_this.pop.Sound("delete");							// Error sound
						},
					error: function(xhr,status,error) {							// Error
						_this.pop.Sound("delete") 								// Error sound
						}								
					});
			});
	}	

	function GetUserData(callback)											// LOAD DATA TO USERDATA
	{		
		var dat={};
		var url="loaddata.php";													// Base file
		dat["email"]=userName;													// Add email
		dat["password"]=password;												// Add password
		dat["title"]=title;														// Add title
		dat["data"]=data														// Add data
		$.ajax({ url:url,dataType:'jsonp',data:dat});  							// Get data
	}
	

	function LoadUserData(data)											// HANDLE INCOMING DATA LOAD
	{
		trace(data)
	}


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// HELPERS
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	function trace(msg, p1, p2, p3, p4)										// CONSOLE 
	{
		if (p4 != undefined)
			console.log(msg,p1,p2,p3,p4);
		else if (p3 != undefined)
			console.log(msg,p1,p2,p3);
		else if (p2 != undefined)
			console.log(msg,p1,p2);
		else if (p1 != undefined)
			console.log(msg,p1);
		else
			console.log(msg);
	}


	function FindMobByID(id)												// FIND MOB BY ITS ID
	{
		var i,o;
		var n=curJson.mobs.length;													// Get length
		for (i=0;i<n;++i) {														// For each mob
			o=curJson.mobs[i].id;													// Get id												
			if (o && o.indexOf(id) != -1)										// If it matches
				return i;														// Return index of mob
			}
		return -1;																// Return nothing found
	}

	function MakeSelect(id, multi, items, sel, extra, values)				// CREATE HTML SELECT
	{
		var	str="<select class='ve-bs' id='"+id+"'";							// Header
		if (multi)																// Multi select
			str+="multiple='multiple' size='"+multi+"'";						// Add flag
		if (extra)																// If extra param
			str+=extra;															// Add them
		str+=">";																// End header
		for (i=0;i<items.length;++i) {											// For each option
			str+="<option";														// Add tag
			if (sel == items[i])												// If selected
				str+=" selected='selected'"										// Add tag
			if (values && values[i])											// If has a value
				str+=" value='"+values[i]+"'";									// Add it
			str+=">"+items[i]+"</option>";										// End option
			}	
		return str+"</select>";													// End select				
	}

	function tim(time)
	{
		return pop.FormatTime(time,"Mo/Day/Year");
	}
	
	function ClearPopUps()													// CLOSE ALL OPEN POPUPS
	{
	/* 
	 	Close any open popups zoomers, webpages, or alerts.  
	*/
		$("#st-webpage").remove();												// Remove old page popup
		$("#alertBoxDiv").remove();												// Remove oldalert boxe
		$("#st-popup").remove();												// Remove old popup
		$("#colorPickerDiv").remove();											// Remove old colorpicker
	$("#rightDiv").html("<img src='http://www.viseyes.org/efolio/declaration.JPG' width='100%'>");
	}

</script>
</body></html>

